basePath: /api/v1
definitions:
  dto.TaskRequest:
    properties:
      completed:
        type: boolean
      deadline:
        type: string
      description:
        minLength: 5
        type: string
      startDate:
        type: string
      title:
        maxLength: 100
        type: string
    required:
    - completed
    - deadline
    - description
    - startDate
    - title
    type: object
  model.Task:
    properties:
      completed:
        type: boolean
      createdAt:
        type: string
      deadline:
        type: string
      description:
        type: string
      id:
        type: string
      startDate:
        type: string
      title:
        type: string
      updatedAt:
        type: string
    type: object
  utils.APIResponse:
    properties:
      data: {}
      message:
        type: string
      success:
        default: true
        type: boolean
    type: object
  utils.HTTPError:
    properties:
      error: {}
      message:
        type: string
      success:
        default: false
        type: boolean
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a simple CRUD API for qubic ball assessment
  title: Task Management API
  version: "1.0"
paths:
  /tasks:
    get:
      consumes:
      - application/json
      description: Get a list of all tasks
      produces:
      - application/json
      responses:
        "200":
          description: Tasks fetched successfully
          schema:
            allOf:
            - $ref: '#/definitions/utils.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.Task'
                  type: array
              type: object
        "500":
          description: Failed to fetch tasks
          schema:
            $ref: '#/definitions/utils.HTTPError'
      summary: Get All Tasks
      tags:
      - Tasks
    post:
      consumes:
      - application/json
      parameters:
      - description: Task Request Body
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/dto.TaskRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Task created successfully
          schema:
            allOf:
            - $ref: '#/definitions/utils.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/model.Task'
                message:
                  type: string
                status:
                  type: string
              type: object
        "400":
          description: Invalid input
          schema:
            allOf:
            - $ref: '#/definitions/utils.APIResponse'
            - properties:
                message:
                  type: string
                status:
                  type: string
              type: object
        "500":
          description: Failed to create task
          schema:
            allOf:
            - $ref: '#/definitions/utils.APIResponse'
            - properties:
                message:
                  type: string
                status:
                  type: string
              type: object
      summary: Create Tasks
      tags:
      - Tasks
swagger: "2.0"
